/*
    General Purpose Class Collection (GPCC)
    Copyright (C) 2019 Daniel Jerolm

    This file is part of the General Purpose Class Collection (GPCC).

    The General Purpose Class Collection (GPCC) is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    The General Purpose Class Collection (GPCC) is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

                                      ---

    A special exception to the GPL can be applied should you wish to distribute
    a combined work that includes the General Purpose Class Collection (GPCC), without being obliged
    to provide the source code for any proprietary components. See the file
    license_exception.txt for full details of how and when the exception can be applied.
*/

/**
 * @ingroup GPCC_RESOURCEMANAGEMENT
 * @defgroup GPCC_RESOURCEMANAGEMENT_MEMORY Memory management
 *
 * \brief Classes for managing memory and memory-like resources.
 *
 * Currently two classes for managing any type of memory in a heap-like-style are available:\n
 * [HeapManager](@ref gpcc::ResourceManagement::Memory::HeapManager) and
 * [HeapManagerSPTS](@ref gpcc::ResourceManagement::Memory::HeapManagerSPTS)\n
 * Both classes offer a heap-style management for any kind of memory purely based on addresses and sizes
 * only. This means that the managed memory does not even need to exist. Both classes only work with numbers
 * that represent the memories' addresses and sizes and both will never attempt to access the managed memory.
 * This makes the two classes especially suitable for managing dedicated memory in hardware peripherals.\n
 * [HeapManagerSPTS](@ref gpcc::ResourceManagement::Memory::HeapManagerSPTS) uses RAII memory descriptors and
 * provides build-in thread safety. It is simple to use.\n
 * [HeapManager](@ref gpcc::ResourceManagement::Memory::HeapManager) does not offer RAII memory descriptors and
 * has no build-in thread-safety. It is recommended if speed and small memory footprint matters.
 */
