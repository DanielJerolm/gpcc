/*
    General Purpose Class Collection (GPCC)

    This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
    If a copy of the MPL was not distributed with this file,
    You can obtain one at https://mozilla.org/MPL/2.0/.

    Copyright (C) 2019 Daniel Jerolm
*/

/**
 * @ingroup GPCC
 * @defgroup GPCC_EXECUTION Code Execution
 *
 * \brief Classes for executing code (e.g. work queues).
 *
 * Any code executed in an application is executed using a thread.\n
 * There are various ways how code can be executed. For each approach, GPCC provides tools and support:
 * - Some classes or functionalities may have their own dedicated thread for executing code.\n
 *   In this case class [Thread](@ref gpcc::osal::Thread) can be instantiated to create and manage a dedicated
 *   thread.
 * - Often multiple classes or functionalities share one thread. GPCC provides work queues for comfortable
 *   asynchronous execution of code from different classes, instances of an class, or functionalties by one
 *   shared thread. Asynchronous execution can even be deferred in order to implement timeout handling.\n
 *   Check out classes in module @ref GPCC_EXECUTION_ASYNC.
 * - In control systems, some code must be executed cyclically. Cyclic execution must be gracefully started and
 *   stopped and overruns must be detected. Check out module @ref GPCC_EXECUTION_CYCLIC.
 */
